<template>
  <div class="sidebar-area {{className}}">
    <div class="top-area">
      <input class="close-btn" type="button" @click='onCloseBtnClick' />
    </div>
    <div class="logo-area">
      <image class="logo" src="./../../assets/images/logo.png"></image>
    </div>
    <div class="count-area">
      <image class="app-icon" src="./../../assets/icons/favorites.svg"></image>
      <input class="app-title" type="button" value="倾城之链" @click='onTitleBtnClick'/>
    </div>
    <div class="menu-area">
      <div class="menu-top">
        <div class="menu-item" for="itemsList">
          <input class="item-text" type="button"
            value="{{$item.name}}"
            @click='onItemClick($item)'/>
        </div>
      </div>
      <div class="bottom-menu">
        <input class="item-text" type="button" value="关于" @click='onAboutBtnClick'/>
        <input class="item-text" type="button" value="保存" @click='onSaveBtnClick'/>
      </div>
    </div>
  </div>
</template>

<script>
import storage from '@system.storage'
const FAVORITES = 'favoritesList'

export default {
  data: {
    className: 'sidebar-origin',
    itemsList: [
      {
        name: '技术客栈',
        path: 'skill'
      },
      {
        name: '资源之家',
        path: 'resource'
      },
      {
        name: '写意人生',
        path: 'life'
      },
      {
        name: '信息快讯',
        path: 'info'
      },
      {
        name: '倾城主题',
        path: 'https://nicelinks.site/collections/theme?utm_source=quickapp'
      },
      {
        name: '倾城标签',
        path: 'https://nicelinks.site/collections/tags?utm_source=quickapp'
      }
    ]
  },
  props: {
    open: {
      type: Boolean,
      default() {
        return false
      }
    }
  },
  onInit() {
    this.$watch('open', 'watchShowChange')
  },
  /* -------------------SelfCustomEvent------------------ */
  watchShowChange(newV, oldV) {
    this.className = newV ? 'sidebar-show' : 'sidebar-hide'
  },
  hideSidebar(param) {
    this.$emit('hideSidebar', param)
  },
  onCloseBtnClick() {
    this.hideSidebar()
  },
  onTitleBtnClick() {
    this.hideSidebar({ classify: '' })
  },
  onItemClick(item) {
    if ($utils.isLegalUrl(item.path)) {
      return $utils.route2theUrl(item.path)
    }
    this.hideSidebar({
      classify: item.path
    })
  },
  onAboutBtnClick() {
    $utils.route2aboutPage()
  },
  onSaveBtnClick() {
    $utils.createShortcut()
  }
}
</script>

<style lang="less">
@import './../assets/styles/style.less';
.sidebar-area {
  .flex-box-mixins(row, center, center);
  position: fixed;
  height: 100%;
  width: 500px;
  flex-direction: column;
  justify-content: flex-start;
  background-image: url('./../../assets/images/pure-moon.jpg');
  background-size: cover;
  .top-area {
    .flex-box-mixins(row, space-between, center);
    width: 100%;
    height: 20 * @size-factor;
    padding: 2 * @size-factor 3 * @size-factor;
  }
  .close-btn {
    align-self: center;
    width: 7 * @size-factor;
    height: 7 * @size-factor;
    background-size: 100%;
    background-image: url('./../../assets/icons/close.png');
    :active {
      width: 7 * @size-factor;
      height: 8 * @size-factor;
    }
  }
  .logo-area {
    justify-content: center;
    width: 100%;
    height: 320px;
    padding: 20px;
    .logo {
      resize-mode: center;
      border-radius: 16 * @size-factor;
    }
  }
  .count-area {
    width: 80%;
    height: 120px;
    .flex-box-mixins(row, center, center);
    .app-icon {
      width: 5 * @size-factor;
      height: 5 * @size-factor;
      resize-mode: contain;
    }
    .app-title {
      background-color: transparent;
      font-size: 7 * @size-factor;
      margin-left: @size-factor;
      color: @white;
    }
  }
  .menu-area {
    .flex-box-mixins(column, space-between, center);
    width: 80%;
    height: 100%;
    padding-bottom: 10 * @size-factor;
    .menu-top {
      border-top-width: 2px;
      border-top-color: #ffffff;
      flex-direction: column;
    }
    .bottom-menu {
      width: 100%;
      .flex-box-mixins(row, center, center);
      border-top-width: 2px;
      border-top-color: #ffffff;
      .item-text {
        background-color: transparent;
      }
    }
    .menu-item {
      margin-top: 4 * @size-factor;
      width: 100%;
      .item-text {
        background-color: transparent;
        width: 100%;
        color: @white;
        font-size: 5 * @size-factor;
        text-align: center;
      }
      .item-text:active {
        color: @brand;
      }
    }
  }
  .bottom-area {
    flex-direction: column;
    align-self: flex-end;
  }
}
.sidebar-origin {
  transform: translateX(-500px);
}
.sidebar-show {
  animation-name: drawershow;
  animation-duration: 300ms;
  animation-fill-mode: forwards;
}
.sidebar-hide {
  animation-name: drawerhide;
  animation-duration: 300ms;
  animation-fill-mode: forwards;
}

@keyframes drawershow {
  0% {
    transform: translateX(-500px);
  }
  100% {
    transform: translateX(0);
  }
}

@keyframes drawerhide {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(-500px);
  }
}
</style>
